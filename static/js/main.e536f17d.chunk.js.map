{"version":3,"sources":["components/Charts/ChartError/ChartError.module.scss","components/Charts/CustomMultiLineChart/CustomMultiLineChart.module.scss","routes/Home/Home.module.scss","components/KPI/KPI.module.scss","routes/Home/MiddleSection/MiddleSection.module.scss","redux/actions/types.ts","components/Layout/Layout.tsx","routes/Home/TopSection/Backgrounds/BackgroundTop.tsx","redux/actions/graphData.ts","routes/Home/TopSection/TopSection.tsx","utility/formatNumber.tsx","components/Charts/ChartError/ChartError.tsx","components/Charts/CustomPieChart/CustomPieChart.tsx","components/KPI/KPI.tsx","components/Charts/CustomMultiLineChart/CustomMultiLineChart.tsx","routes/Home/MiddleSection/MiddleSection.tsx","routes/Home/BottomSection/BottomSection.tsx","routes/Home/Home.tsx","routes/Admin/Admin.tsx","App.tsx","redux/reducers/graphData.ts","redux/reducers/index.ts","redux/store.ts","serviceWorker.ts","index.tsx","routes/Home/TopSection/TopSection.module.scss","routes/Home/BottomSection/BottomSection.module.scss","components/Layout/Layout.module.scss","routes/Home/TopSection/Backgrounds/BackgroundTop.module.scss","components/Charts/CustomPieChart/CustomPieChart.module.scss"],"names":["module","exports","ActionTypes","MemoizedLayout","React","children","div","layout","className","styles","container","initial","x","animate","transition","type","stiffness","damping","mass","delay","block1","y","block2","MemoizedBackgroundTop","preserveAspectRatio","svg","viewBox","id","stdDeviation","strokeWidth","fill","stroke","strokeLinejoin","d","animatedMiddle","animatedLeft","animatedRight","fetchCovidData","countryCode","dispatch","getState","a","RequestData","fetch","then","res","json","results","data","RequestDataSuccess","payload","message","RequestDataFailure","MemoizedTopSection","useDispatch","useState","label","value","selected","setSelected","options","useMemo","Object","entries","CountryCodes","map","action","search","location","inputContainer","onChange","prop","select","isSearchable","date","formatNumber","num","decimal","integer","Math","floor","toString","replace","toFixed","split","MemoizedChartError","opacity","exit","text","MemoizedCustomPieChart","pieData","gradients","deaths","start","end","color","critical","recovered","confirmed","dataNotAvailable","slices","every","item","exitBeforeEnter","key","style","width","height","background","margin","top","right","left","bottom","keys","offset","stopColor","dataKey","innerRadius","outerRadius","paddingAngle","entry","index","name","position","content","props","positioningProps","cx","cy","fontSize","textAnchor","verticalAnchor","fontWeight","total","contentStyle","textTransform","backgroundColor","border","active","customTooltip","align","verticalAlign","formatter","memoizedKPI","KPI","memoizedKPIContainer","direction","KPIContainer","separate","row","MemoizedCustomMultiLineChart","scale","lines","yAxis","formatDate","loading","dateNum","newDate","Date","year","getFullYear","month","getMonth","day","getDate","length","vertical","dot","domain","tickFormatter","tick","toDateString","interval","transform","dy","allowDataOverflow","labelFormatter","labelStyle","showVariant","parent","show","duration","MemoizedMiddleSection","useSelector","state","graphData","error","errorMessage","KPIData","timeline","variants","custom","MiddleSection","graphContainer","lineChart2","lineChart","MemoizedBottomSection","BottomSection","filter","Home","Admin","App","exact","path","to","initialState","undefined","transformToKPIData","reduce","accu","currentKey","toLocaleString","keySecondLvl","keyThirdLvl","transformToTimelineData","parse","updated_at","reverse","transformToPieData","latest_data","current","push","reducers","combineReducers","newState","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.e536f17d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ChartError_container__o7PVP\",\"text\":\"ChartError_text__25n4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"CustomMultiLineChart_background__1RuuR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__2FE8G\",\"search\":\"Home_search__25bVJ\",\"inputContainer\":\"Home_inputContainer__2ttl1\",\"graphsContainer\":\"Home_graphsContainer__1QL2V\",\"graphContainer\":\"Home_graphContainer__19xcp\",\"graph\":\"Home_graph__1Livk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"KPI\":\"KPI_KPI__1Pi1Y\",\"value\":\"KPI_value__VpBqW\",\"key\":\"KPI_key__1dX1j\",\"KPIContainer\":\"KPI_KPIContainer__Nw140\",\"row\":\"KPI_row__1WW3m\",\"connected\":\"KPI_connected__1jvlp\",\"separate\":\"KPI_separate__3zeix\",\"column\":\"KPI_column__3KmTW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MiddleSection\":\"MiddleSection_MiddleSection__2V0_b\",\"graphContainer\":\"MiddleSection_graphContainer__1QaKv\",\"circleChart\":\"MiddleSection_circleChart__1g-Nx\",\"lineChart\":\"MiddleSection_lineChart__Ndo5c\",\"lineChart2\":\"MiddleSection_lineChart2__1zrP6\"};","export enum ActionTypes {\r\n  RequestData = 'REQUEST_DATA',\r\n  RequestDataSuccess = 'REQUEST_DATA_SUCCESS',\r\n  RequestDataFailure = 'REQUEST_DATA_FAILURE',\r\n}\r\n\r\ninterface coordinate {\r\n  latitude: number;\r\n  longitude: number;\r\n}\r\n\r\nexport interface timelineDataPoint {\r\n  active: number;\r\n  confirmed: number;\r\n  date: string;\r\n  deaths: number;\r\n  is_in_progress: boolean;\r\n  new_confirmed: number;\r\n  new_deaths: number;\r\n  new_recovered: number;\r\n  recovered: number;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface covidData {\r\n  code: string;\r\n  coordinates: coordinate;\r\n  latest_data: {\r\n    confirmed: number;\r\n    critical: number;\r\n    deaths: number;\r\n    recovered: number;\r\n    calculated: {\r\n      cases_per_million_population: number;\r\n      death_rate: number;\r\n      recovered_vs_death_ratio: number | null;\r\n      recovery_rate: number;\r\n    };\r\n  };\r\n  name: string;\r\n  population: number;\r\n  timeline: timelineDataPoint[];\r\n  today: {\r\n    confirmed: number;\r\n    deaths: number;\r\n  };\r\n  updated_at: string;\r\n}\r\n\r\ninterface KPIDataPoint {\r\n  key: string;\r\n  value: string;\r\n}\r\n\r\nexport interface KPIData {\r\n  cases_per_million_population: KPIDataPoint;\r\n  confirmed: KPIDataPoint;\r\n  critical: KPIDataPoint;\r\n  death_rate: KPIDataPoint;\r\n  deaths: KPIDataPoint;\r\n  name: KPIDataPoint;\r\n  population: KPIDataPoint;\r\n  recovered: KPIDataPoint;\r\n  recovered_vs_death_ratio: KPIDataPoint;\r\n  recovery_rate: KPIDataPoint;\r\n  updated_at: KPIDataPoint;\r\n}\r\n\r\ninterface pieSlice {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\nexport interface PieData {\r\n  slices: pieSlice[];\r\n  total: number;\r\n}\r\n","import * as React from 'react';\r\nimport styles from './Layout.module.scss';\r\nimport { motion, AnimateSharedLayout } from 'framer-motion';\r\n\r\ninterface IProps {}\r\n\r\nconst Layout: React.FC<IProps> = ({ children }) => {\r\n  return (\r\n    <AnimateSharedLayout>\r\n      <motion.div layout className={styles.layout}>\r\n        <motion.div layout className={styles.container}>\r\n          {children}\r\n        </motion.div>\r\n        <motion.div\r\n          initial={{\r\n            x: '100vw',\r\n          }}\r\n          animate={{\r\n            x: 0,\r\n          }}\r\n          transition={{\r\n            type: 'spring',\r\n            stiffness: 100,\r\n            damping: 300,\r\n            mass: 4,\r\n            delay: 0.8,\r\n          }}\r\n          className={styles.block1}></motion.div>\r\n        <motion.div\r\n          initial={{\r\n            y: '-100vh',\r\n          }}\r\n          animate={{\r\n            y: 0,\r\n          }}\r\n          transition={{\r\n            type: 'spring',\r\n            stiffness: 100,\r\n            damping: 300,\r\n            mass: 4,\r\n            delay: 0.8,\r\n          }}\r\n          className={styles.block2}></motion.div>\r\n      </motion.div>\r\n    </AnimateSharedLayout>\r\n  );\r\n};\r\n\r\nconst MemoizedLayout = React.memo(Layout);\r\n\r\nexport default MemoizedLayout;\r\n","import * as React from 'react';\r\nimport styles from './BackgroundTop.module.scss';\r\n\r\ninterface IProps {}\r\n\r\nconst BackgroundTop: React.FC<IProps> = () => {\r\n  return (\r\n    <svg preserveAspectRatio='none' className={styles.svg} viewBox='0 0 20 4.2'>\r\n      <filter id='blurMe'>\r\n        <feGaussianBlur stdDeviation='.04' />\r\n      </filter>\r\n      <g>\r\n        <path\r\n          strokeWidth='.1px'\r\n          fill='transparent'\r\n          stroke='#141c5a'\r\n          strokeLinejoin='round'\r\n          d='m 0 3 l 3 0 l 1 1 l 12 0 l 1 -1 l 3 0'\r\n        />\r\n      </g>\r\n      <g>\r\n        <path\r\n          className={styles.animatedMiddle}\r\n          d='m 0 3 l 3 0 l 1 1 l 12 0 l 1 -1 l 3 0'\r\n        />\r\n        <path\r\n          className={styles.animatedLeft}\r\n          d='m 0 3 l 3 0 l 1 1 l 12 0 l 1 -1 l 3 0'\r\n        />\r\n        <path\r\n          className={styles.animatedRight}\r\n          d='m 0 3 l 3 0 l 1 1 l 12 0 l 1 -1 l 3 0'\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst MemoizedBackgroundTop = React.memo(BackgroundTop);\r\n\r\nexport default MemoizedBackgroundTop;\r\n","import { ActionTypes, covidData } from './types';\r\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\r\nimport { GraphState } from '../reducers/graphData';\r\nimport { AnyAction } from 'redux';\r\n\r\ninterface requestDataActionType {\r\n  type: ActionTypes.RequestData;\r\n}\r\n\r\nconst requestDataAction: () => requestDataActionType = () => {\r\n  return {\r\n    type: ActionTypes.RequestData,\r\n  };\r\n};\r\n\r\ninterface requestDataSuccessActionType {\r\n  type: ActionTypes.RequestDataSuccess;\r\n  payload: covidData;\r\n}\r\n\r\nconst requestDataSuccessAction: (\r\n  data: covidData\r\n) => requestDataSuccessActionType = (data) => {\r\n  return {\r\n    type: ActionTypes.RequestDataSuccess,\r\n    payload: data,\r\n  };\r\n};\r\n\r\ninterface requestDataFailureActionType {\r\n  type: ActionTypes.RequestDataFailure;\r\n  payload: string;\r\n}\r\n\r\nconst requestDataFailureAction: (\r\n  message: string\r\n) => requestDataFailureActionType = (message) => {\r\n  return {\r\n    type: ActionTypes.RequestDataFailure,\r\n    payload: message,\r\n  };\r\n};\r\n\r\nexport type AllActions =\r\n  | requestDataActionType\r\n  | requestDataSuccessActionType\r\n  | requestDataFailureActionType\r\n  | AnyAction;\r\n\r\nexport const fetchCovidData = (\r\n  countryCode: string\r\n): ThunkAction<Promise<void>, GraphState, {}, AllActions> => {\r\n  return async (\r\n    dispatch: ThunkDispatch<GraphState, {}, AllActions>,\r\n    getState\r\n  ): Promise<void> => {\r\n    dispatch<requestDataActionType>(requestDataAction());\r\n    try {\r\n      const results: {\r\n        data: covidData;\r\n      } = await fetch(\r\n        `https://corona-api.com/countries/${countryCode}`\r\n      ).then((res) => res.json());\r\n      dispatch<requestDataSuccessActionType>(\r\n        requestDataSuccessAction(results.data)\r\n      );\r\n    } catch (err) {\r\n      dispatch<requestDataFailureActionType>(requestDataFailureAction(err));\r\n    }\r\n  };\r\n};\r\n","import * as React from 'react';\r\nimport { useMemo, useState, useRef } from 'react';\r\nimport styles from './TopSection.module.scss';\r\nimport BackgroundTop from './Backgrounds/BackgroundTop';\r\nimport CountryCodes from '../../../utility/countryCodes.json';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchCovidData } from '../../../redux/actions';\r\nimport Select from 'react-select';\r\n\r\ninterface TopSectionIProps {}\r\n\r\nconst TopSection: React.FC<TopSectionIProps> = () => {\r\n  const dispatch = useDispatch();\r\n  const [selected, setSelected] = useState({\r\n    label: 'United States',\r\n    value: 'US',\r\n  });\r\n\r\n  const handleChange: (prop: { label: string; value: string }) => void = (\r\n    prop\r\n  ) => {\r\n    setSelected(prop);\r\n    dispatch(fetchCovidData(prop.value));\r\n  };\r\n\r\n  const options = useMemo(() => {\r\n    return Object.entries(CountryCodes).map(([key, value]) => ({\r\n      label: key,\r\n      value,\r\n    }));\r\n  }, [CountryCodes]);\r\n\r\n  return (\r\n    <form action='' className={styles.search}>\r\n      <BackgroundTop />\r\n      <span className={styles.location}></span>\r\n      <div className={styles.inputContainer}>\r\n        <Select\r\n          options={options}\r\n          value={selected}\r\n          onChange={handleChange}\r\n          className={styles.select}\r\n          isSearchable\r\n        />\r\n      </div>\r\n      <span className={styles.date}></span>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst MemoizedTopSection = React.memo(TopSection);\r\n\r\nexport default MemoizedTopSection;\r\n","const formatNumber = (num: number): string => {\r\n  let decimal = num % 1;\r\n  let integer = Math.floor(num);\r\n\r\n  return `${integer.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}${\r\n    decimal > 0 ? '.' + decimal.toFixed(2).split('.')[1] : ''\r\n  }`;\r\n};\r\n\r\nexport default formatNumber;\r\n","import * as React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport styles from './ChartError.module.scss';\r\n\r\ninterface IChartError {}\r\n\r\nconst ChartError: React.FC<IChartError> = () => {\r\n  return (\r\n    <motion.div\r\n      initial={{\r\n        opacity: 0,\r\n      }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      className={styles.container}>\r\n      <p className={styles.text}>No data available</p>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst MemoizedChartError = React.memo(ChartError);\r\n\r\nexport { MemoizedChartError as ChartError };\r\n","import * as React from 'react';\r\nimport {\r\n  ResponsiveContainer,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  Legend,\r\n  Tooltip,\r\n  Label,\r\n  Text,\r\n} from 'recharts';\r\nimport formatNumber from '../../../utility/formatNumber';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport styles from './CustomPieChart.module.scss';\r\nimport { PieData } from '../../../redux/actions/types';\r\nimport { ChartError } from '../ChartError/ChartError';\r\n\r\ninterface CustomPieChartIProps {\r\n  pieData: PieData;\r\n}\r\n\r\nconst CustomPieChart: React.FC<CustomPieChartIProps> = ({ pieData }) => {\r\n  const gradients = {\r\n    deaths: {\r\n      start: 'hsl(332, 98%, 68%)',\r\n      end: 'hsl(344, 81%, 56%)',\r\n      color: '#f1437d',\r\n    },\r\n    critical: {\r\n      start: 'hsl(43, 92%, 72%)',\r\n      end: 'hsl(27, 67%, 58%)',\r\n      color: '#e09852',\r\n    },\r\n    recovered: {\r\n      start: 'hsl(203, 99%, 59%)',\r\n      end: 'hsl(230, 66%, 52%)',\r\n      color: '#3362dd',\r\n    },\r\n    confirmed: {\r\n      start: 'hsl(167, 81%, 58%)',\r\n      end: 'hsl(192, 58%, 46%)',\r\n      color: '#8884d8',\r\n    },\r\n  };\r\n\r\n  const legendFormatter = (value, entry) => {\r\n    return (\r\n      <span\r\n        style={{\r\n          color: gradients[value].color,\r\n          textTransform: 'capitalize',\r\n          fontSize: 12,\r\n          fontWeight: 700,\r\n        }}>\r\n        {value}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const renderLegend = () => {};\r\n\r\n  const customTooltip = (props) => {\r\n    const { active, payload, label } = props;\r\n    if (active) {\r\n      return (\r\n        <div className={styles.customTooltip}>\r\n          <p\r\n            style={{\r\n              color: payload[0].payload.fill,\r\n            }}\r\n            className={styles.label}>{`${payload[0].name} : ${formatNumber(\r\n            payload[0].value\r\n          )}`}</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const dataNotAvailable = pieData?.slices.every((item) => item.value === 0);\r\n  return (\r\n    <AnimatePresence exitBeforeEnter>\r\n      {dataNotAvailable ? (\r\n        <ChartError />\r\n      ) : (\r\n        <motion.div\r\n          layout\r\n          key='CustomPieChart'\r\n          initial={{ opacity: 0.5 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0.5 }}\r\n          style={{ width: '100%', height: '100%' }}>\r\n          <ResponsiveContainer className={styles.background}>\r\n            <PieChart\r\n              margin={{\r\n                top: 10,\r\n                right: 10,\r\n                left: 10,\r\n                bottom: 10,\r\n              }}>\r\n              <defs>\r\n                {Object.keys(gradients).map((key) => {\r\n                  return (\r\n                    <linearGradient id={key} key={key}>\r\n                      <stop offset='5%' stopColor={gradients[key].start} />\r\n                      <stop offset='95%' stopColor={gradients[key].end} />\r\n                    </linearGradient>\r\n                  );\r\n                })}\r\n              </defs>\r\n              <Pie\r\n                dataKey='value'\r\n                data={pieData?.slices}\r\n                innerRadius={'50%'}\r\n                outerRadius={'80%'}\r\n                stroke={0}\r\n                paddingAngle={0}>\r\n                {pieData &&\r\n                  pieData.slices.map((entry, index) => {\r\n                    return (\r\n                      <Cell\r\n                        key={`cell-${index}`}\r\n                        fill={gradients[entry.name].color}\r\n                      />\r\n                    );\r\n                  })}\r\n                <Label\r\n                  position='center'\r\n                  content={(props) => {\r\n                    const {\r\n                      viewBox: { cx, cy },\r\n                    } = props;\r\n                    const positioningProps = {\r\n                      x: cx,\r\n                      y: cy,\r\n                      // textAnchor: 'middle',\r\n                      // verticalAnchor: 'middle',\r\n                    };\r\n                    const presentationProps = {\r\n                      fill: '#8884d8',\r\n                      fontSize: 16,\r\n                    };\r\n\r\n                    return (\r\n                      <Text\r\n                        className={'Testing-class'}\r\n                        {...positioningProps}\r\n                        {...presentationProps}\r\n                        textAnchor={'middle'}\r\n                        verticalAnchor={'middle'}\r\n                        fontWeight={700}>\r\n                        {formatNumber(pieData.total)}\r\n                      </Text>\r\n                    );\r\n                  }}\r\n                />\r\n              </Pie>\r\n              <Tooltip\r\n                contentStyle={{\r\n                  textTransform: 'capitalize',\r\n                  backgroundColor: '#161f48',\r\n                  border: '0px solid transparent',\r\n                }}\r\n                content={customTooltip}\r\n              />\r\n              <Legend\r\n                layout='horizontal'\r\n                align='center'\r\n                verticalAlign='bottom'\r\n                formatter={legendFormatter}\r\n              />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nconst MemoizedCustomPieChart = React.memo(CustomPieChart);\r\n\r\nexport default MemoizedCustomPieChart;\r\n","import * as React from 'react';\r\nimport styles from './KPI.module.scss';\r\n\r\ninterface KPIIProps {\r\n  data?: {\r\n    key: string;\r\n    value: string;\r\n  };\r\n}\r\n\r\nconst KPI: React.FC<KPIIProps> = ({ data }) => {\r\n  const { key, value } = data ? data : { key: 'Loading', value: 'Loading' };\r\n\r\n  return (\r\n    <div className={styles.KPI}>\r\n      <span className={styles.value}>{value}</span>\r\n      <span className={styles.key}>{key}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst memoizedKPI = React.memo(KPI);\r\n\r\ninterface KPIContainerIProps {\r\n  type?: 'separate' | 'connected';\r\n  direction?: 'row' | 'column';\r\n  children:\r\n    | React.ReactElement<KPIIProps>\r\n    | Array<React.ReactElement<KPIIProps>>;\r\n}\r\n\r\nconst KPIContainer: React.FC<KPIContainerIProps> = (props) => {\r\n  const { children, type, direction } = props;\r\n  return (\r\n    <div\r\n      className={`${styles.KPIContainer} ${\r\n        type ? styles[type] : styles.separate\r\n      } ${direction ? styles[direction] : styles.row}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst memoizedKPIContainer = React.memo(KPIContainer);\r\n\r\nexport { memoizedKPI as KPI, memoizedKPIContainer as KPIContainer };\r\n","import * as React from 'react';\r\nimport styles from './CustomMultiLineChart.module.scss';\r\nimport {\r\n  LineChart,\r\n  CartesianGrid,\r\n  Line,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n} from 'recharts';\r\nimport { timelineDataPoint } from '../../../redux/actions/types';\r\nimport formatNumber from '../../../utility/formatNumber';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport Loading from '../../Loading/Loading';\r\nimport { ChartError } from '../ChartError/ChartError';\r\n\r\ninterface lineOption {\r\n  type: string;\r\n  dataKey: string;\r\n  stroke: string;\r\n  dot: boolean;\r\n  strokeWidth: number;\r\n}\r\n\r\ninterface CustomMultiLineChartProps {\r\n  data: timelineDataPoint[];\r\n  scale?: 'linear' | 'log';\r\n  lines: lineOption[];\r\n  yAxis: string;\r\n  loading: boolean;\r\n}\r\nconst CustomMultiLineChart: React.FC<CustomMultiLineChartProps> = ({\r\n  data,\r\n  scale = 'linear',\r\n  lines,\r\n  yAxis,\r\n  loading,\r\n}) => {\r\n  // utility\r\n\r\n  const formatDate = (dateNum: number): string => {\r\n    const newDate = new Date(dateNum);\r\n    const year = newDate.getFullYear();\r\n    const month = newDate.getMonth() + 1;\r\n    const day = newDate.getDate();\r\n    return `${month}/${day}/${year}`;\r\n  };\r\n\r\n  const tickFormater = (tick) => {\r\n    return new Date(tick).toDateString();\r\n  };\r\n  const customizedTick = (props) => {\r\n    const { x, y, stroke, payload } = props;\r\n    return (\r\n      <g transform={`translate(${x},${y})`}>\r\n        <text\r\n          x={0}\r\n          y={0}\r\n          dy={16}\r\n          textAnchor='middle'\r\n          fill='hsl(228,48%,50%)'\r\n          fontSize='14'\r\n          fontWeight='500'\r\n          transform='rotate(0)'>\r\n          {formatDate(payload.value)}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  const labelFormater = (label) => formatDate(label);\r\n\r\n  const tooltipFormatter = (value, name, props) => {\r\n    return formatNumber(value);\r\n  };\r\n  return (\r\n    <AnimatePresence exitBeforeEnter>\r\n      {data.length === 0 ? (\r\n        <ChartError />\r\n      ) : (\r\n        <motion.div\r\n          key='MiltiLineChart'\r\n          initial={{ opacity: 0.5 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0.5 }}\r\n          style={{ width: '100%', height: '100%' }}>\r\n          <ResponsiveContainer className={styles.background}>\r\n            <LineChart\r\n              data={data}\r\n              margin={{\r\n                top: 20,\r\n                left: 20,\r\n                right: 20,\r\n                bottom: 10,\r\n              }}>\r\n              <CartesianGrid\r\n                vertical={false}\r\n                strokeWidth={1.5}\r\n                opacity={0.5}\r\n                stroke='#293875'\r\n              />\r\n              {lines.map(({ dataKey, stroke, dot, strokeWidth }) => {\r\n                return (\r\n                  <Line\r\n                    key={dataKey}\r\n                    dataKey={dataKey}\r\n                    stroke={stroke}\r\n                    dot={dot}\r\n                    strokeWidth={strokeWidth}\r\n                  />\r\n                );\r\n              })}\r\n              <XAxis\r\n                scale={'time'}\r\n                dataKey={'dateNumber'}\r\n                type={'number'}\r\n                domain={['dataMin', 'auto']}\r\n                tickFormatter={tickFormater}\r\n                interval={30}\r\n                tick={customizedTick}\r\n                stroke='hsl(228,48%,50%)'\r\n              />\r\n              <YAxis\r\n                dataKey={yAxis}\r\n                domain={['dataMin', 'dataMax']}\r\n                scale={scale}\r\n                tickFormatter={formatNumber}\r\n                stroke='hsl(228,48%,50%)'\r\n                // interval='preserveStart'\r\n                allowDataOverflow={true}\r\n              />\r\n              <Tooltip\r\n                labelFormatter={labelFormater}\r\n                formatter={tooltipFormatter}\r\n                contentStyle={{\r\n                  textTransform: 'capitalize',\r\n                  backgroundColor: '#161f48',\r\n                  border: '0px solid transparent',\r\n                }}\r\n                labelStyle={{\r\n                  color: 'white',\r\n                  fontWeight: 500,\r\n                }}\r\n              />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nconst MemoizedCustomMultiLineChart = React.memo(CustomMultiLineChart);\r\n\r\nexport default MemoizedCustomMultiLineChart;\r\n","import * as React from 'react';\r\nimport styles from './MiddleSection.module.scss';\r\nimport CustomPieChart from '../../../components/Charts/CustomPieChart/CustomPieChart';\r\nimport { KPIContainer, KPI } from '../../../components/KPI/KPI';\r\nimport { useSelector } from 'react-redux';\r\nimport { StoreState } from '../../../redux/reducers';\r\nimport { GraphState } from '../../../redux/reducers/graphData';\r\nimport CustomMultiLineChart from '../../../components/Charts/CustomMultiLineChart/CustomMultiLineChart';\r\nimport { motion } from 'framer-motion';\r\ninterface MiddleSectionIProps {}\r\n\r\nconst showVariant = {\r\n  initial: (options) => {\r\n    return options.parent\r\n      ? { opacity: 1 }\r\n      : {\r\n          opacity: 0,\r\n          scale: 0.2,\r\n        };\r\n  },\r\n  show: (options) => {\r\n    return options.parent\r\n      ? {\r\n          opacity: 1,\r\n        }\r\n      : {\r\n          opacity: 1,\r\n          scale: 1,\r\n          transition: {\r\n            type: 'spring',\r\n            delay: 0.15 * options.index,\r\n            duration: 0.5,\r\n          },\r\n        };\r\n  },\r\n  exit: (options) => {\r\n    return !options.parent\r\n      ? {\r\n          opacity: 0,\r\n        }\r\n      : {\r\n          opacity: 1,\r\n        };\r\n  },\r\n};\r\n\r\nconst MiddleSection: React.FC<MiddleSectionIProps> = () => {\r\n  const {\r\n    error,\r\n    errorMessage,\r\n    loading,\r\n    data,\r\n    pieData,\r\n    KPI: KPIData,\r\n    timeline,\r\n  } = useSelector<StoreState, GraphState>((state) => state.graphData);\r\n\r\n  const timeLineProps = [\r\n    {\r\n      type: 'linear',\r\n      dataKey: 'confirmed',\r\n      stroke: '#8884d8',\r\n      dot: false,\r\n      strokeWidth: 2,\r\n    },\r\n    {\r\n      type: 'linear',\r\n      dataKey: 'active',\r\n      stroke: '#e09852',\r\n      dot: false,\r\n      strokeWidth: 2,\r\n    },\r\n    {\r\n      type: 'linear',\r\n      dataKey: 'recovered',\r\n      stroke: '#3362dd',\r\n      dot: false,\r\n      strokeWidth: 2,\r\n    },\r\n    {\r\n      type: 'linear',\r\n      dataKey: 'deaths',\r\n      stroke: '#f1437d',\r\n      dot: false,\r\n      strokeWidth: 2,\r\n    },\r\n  ];\r\n\r\n  const timeLineProps2 = [\r\n    {\r\n      type: 'linear',\r\n      dataKey: 'new_confirmed',\r\n      stroke: '#8884d8',\r\n      dot: false,\r\n      strokeWidth: 2,\r\n    },\r\n    {\r\n      type: 'linear',\r\n      dataKey: 'new_recovered',\r\n      stroke: '#3362dd',\r\n      dot: false,\r\n      strokeWidth: 2,\r\n    },\r\n    {\r\n      type: 'linear',\r\n      dataKey: 'new_deaths',\r\n      stroke: '#f1437d',\r\n      dot: false,\r\n      strokeWidth: 2,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <motion.div\r\n      layout\r\n      variants={showVariant}\r\n      custom={{ parent: true, index: 0 }}\r\n      initial={'initial'}\r\n      animate={'show'}\r\n      exit='exit'\r\n      className={styles.MiddleSection}>\r\n      <motion.div\r\n        variants={showVariant}\r\n        custom={{ parent: false, index: 1 }}\r\n        className={styles.graphContainer}>\r\n        <KPIContainer type='separate'>\r\n          <KPI data={KPIData?.['critical']} />\r\n          <KPI data={KPIData?.['recovered']} />\r\n          <KPI data={KPIData?.['deaths']} />\r\n        </KPIContainer>\r\n      </motion.div>\r\n\r\n      <motion.div\r\n        variants={showVariant}\r\n        custom={{ parent: false, index: 2 }}\r\n        className={styles.graphContainer}>\r\n        <KPIContainer type='connected'>\r\n          <KPI data={KPIData?.['death_rate']} />\r\n          <KPI data={KPIData?.['cases_per_million_population']} />\r\n          <KPI data={KPIData?.['recovery_rate']} />\r\n        </KPIContainer>\r\n      </motion.div>\r\n\r\n      <motion.div\r\n        variants={showVariant}\r\n        custom={{ parent: false, index: 3 }}\r\n        className={styles.graphContainer}>\r\n        <KPIContainer type='connected' direction={'column'}>\r\n          <KPI data={KPIData?.['name']} />\r\n          <KPI data={KPIData?.['population']} />\r\n          <KPI data={KPIData?.['updated_at']} />\r\n        </KPIContainer>\r\n      </motion.div>\r\n\r\n      <motion.div\r\n        variants={showVariant}\r\n        custom={{ parent: false, index: 4 }}\r\n        className={styles.graphContainer}>\r\n        <CustomPieChart pieData={pieData} />\r\n      </motion.div>\r\n      <motion.div\r\n        variants={showVariant}\r\n        custom={{ parent: false, index: 5 }}\r\n        className={styles.lineChart2}>\r\n        <CustomMultiLineChart\r\n          data={timeline}\r\n          scale={'linear'}\r\n          lines={timeLineProps2}\r\n          yAxis='new_confirmed'\r\n          loading={loading}\r\n        />\r\n      </motion.div>\r\n      <motion.div\r\n        variants={showVariant}\r\n        custom={{ parent: false, index: 6 }}\r\n        className={styles.lineChart}>\r\n        <CustomMultiLineChart\r\n          data={timeline}\r\n          scale={'linear'}\r\n          lines={timeLineProps}\r\n          yAxis={'confirmed'}\r\n          loading={loading}\r\n        />\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst MemoizedMiddleSection = React.memo(MiddleSection);\r\n\r\nexport default MemoizedMiddleSection;\r\n","import * as React from 'react';\r\nimport styles from './BottomSection.module.scss';\r\n\r\ninterface IProps {}\r\n\r\nconst BottomSection: React.FC<IProps> = (props) => {\r\n  return (\r\n    <div className={styles.BottomSection}>\r\n      <svg\r\n        preserveAspectRatio='none'\r\n        className={styles.svg}\r\n        viewBox='0 0 20 4.2'>\r\n        <filter id='blurMe'>\r\n          <feGaussianBlur stdDeviation='.04' />\r\n        </filter>\r\n        <filter id='blurBorder'>\r\n          <feGaussianBlur stdDeviation='.04' />\r\n        </filter>\r\n        <g transform='translate(0,.2)'>\r\n          <path\r\n            strokeWidth='.1px'\r\n            fill='#0d1633'\r\n            stroke='#141c5a'\r\n            strokeLinejoin='round'\r\n            filter='url(#blurBorder)'\r\n            d='m 5 4 l 1 -4 l 8 0 l 1 4'\r\n          />\r\n        </g>\r\n        <g transform='translate(0,.2)'>\r\n          <path\r\n            className={styles.animatedMiddle}\r\n            d='m 5 4 l 1 -4 l 8 0 l 1 4'\r\n          />\r\n          <path className={styles.animatedLeft} d='m 5 4 l 1 -4 l 8 0 l 1 4' />\r\n          <path className={styles.animatedRight} d='m 5 4 l 1 -4 l 8 0 l 1 4' />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MemoizedBottomSection = React.memo(BottomSection);\r\n\r\nexport default MemoizedBottomSection;\r\n","import * as React from 'react';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport TopSection from './TopSection/TopSection';\r\nimport MiddleSection from './MiddleSection/MiddleSection';\r\nimport BottomSection from './BottomSection/BottomSection';\r\nimport styles from './Home.module.scss';\r\n\r\ninterface IProps {}\r\n\r\nconst Home: React.FC<IProps> = () => {\r\n  return (\r\n    <Layout>\r\n      <div className={styles.container}>\r\n        <TopSection />\r\n        <MiddleSection />\r\n        <BottomSection />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import * as React from 'react';\r\n\r\nconst Admin = () => {\r\n  return <div> This is Admin route</div>;\r\n};\r\n\r\nexport default Admin;\r\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Home from './routes/Home/Home';\nimport Admin from './routes/Admin/Admin';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path='/admin'>\n        <Admin />\n      </Route>\n      <Route exact path='/home'>\n        <Home />\n      </Route>\n      <Route path='*'>\n        <Redirect to='./home' />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import { ActionTypes, covidData } from '../actions/types';\r\nimport formatNumber from '../../utility/formatNumber';\r\nimport { timelineDataPoint, KPIData, PieData } from '../actions/types';\r\n\r\nexport interface GraphState {\r\n  loading: boolean;\r\n  error: boolean;\r\n  errorMessage: string;\r\n  data: covidData;\r\n  KPI: KPIData;\r\n  timeline: timelineDataPoint[];\r\n  pieData: PieData;\r\n}\r\n\r\nconst initialState: GraphState = {\r\n  loading: false,\r\n  error: false,\r\n  errorMessage: '',\r\n  data: undefined,\r\n  KPI: undefined,\r\n  timeline: [],\r\n  pieData: undefined,\r\n};\r\n\r\ninterface ActionType {\r\n  type: ActionTypes;\r\n  payload?: any;\r\n}\r\n\r\nexport const graphDataReducer = (\r\n  state: GraphState = initialState,\r\n  action: ActionType\r\n): GraphState => {\r\n  let newState = { ...state };\r\n\r\n  switch (action.type) {\r\n    case ActionTypes.RequestData:\r\n      newState.loading = true;\r\n      newState.error = false;\r\n      break;\r\n    case ActionTypes.RequestDataSuccess:\r\n      newState.loading = false;\r\n      newState.error = false;\r\n      newState.data = action.payload;\r\n      newState.KPI = transformToKPIData(action.payload);\r\n      newState.timeline = transformToTimelineData(action.payload);\r\n      newState.pieData = transformToPieData(action.payload);\r\n      break;\r\n    case ActionTypes.RequestDataFailure:\r\n      newState.loading = false;\r\n      newState.error = true;\r\n      newState.errorMessage = action.payload;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return newState;\r\n};\r\n\r\nconst transformToKPIData = (data: covidData): KPIData => {\r\n  const newData = Object.keys(data).reduce((accu, currentKey) => {\r\n    switch (currentKey) {\r\n      case 'name':\r\n        accu[currentKey] = { key: 'Country', value: data[currentKey] };\r\n        break;\r\n      case 'population':\r\n        accu[currentKey] = {\r\n          key: currentKey,\r\n          value: formatNumber(data[currentKey]),\r\n        };\r\n        break;\r\n      case 'updated_at':\r\n        accu[currentKey] = {\r\n          key: 'Last Update',\r\n          value: new Date(data[currentKey]).toLocaleString(),\r\n        };\r\n        break;\r\n      case 'latest_data':\r\n        Object.keys(data[currentKey]).reduce((accu, keySecondLvl) => {\r\n          switch (keySecondLvl) {\r\n            case 'calculated':\r\n              Object.keys(data[currentKey][keySecondLvl]).reduce(\r\n                (accu, keyThirdLvl) => {\r\n                  switch (keyThirdLvl) {\r\n                    case 'cases_per_million_population':\r\n                      accu[keyThirdLvl] = {\r\n                        key: 'cases / Million',\r\n                        value: formatNumber(\r\n                          data[currentKey][keySecondLvl][keyThirdLvl]\r\n                        ),\r\n                      };\r\n                      break;\r\n                    case 'death_rate':\r\n                      accu[keyThirdLvl] = {\r\n                        key: 'death rate',\r\n                        value: formatNumber(\r\n                          data[currentKey][keySecondLvl][keyThirdLvl]\r\n                        ),\r\n                      };\r\n                      break;\r\n                    case 'recovery_rate':\r\n                      accu[keyThirdLvl] = {\r\n                        key: 'recovery rate',\r\n                        value: formatNumber(\r\n                          data[currentKey][keySecondLvl][keyThirdLvl]\r\n                        ),\r\n                      };\r\n                      break;\r\n                    default:\r\n                      accu[keyThirdLvl] = {\r\n                        key: keyThirdLvl,\r\n                        value: formatNumber(\r\n                          data[currentKey][keySecondLvl][keyThirdLvl]\r\n                        ),\r\n                      };\r\n                      break;\r\n                  }\r\n\r\n                  return accu;\r\n                },\r\n                accu\r\n              );\r\n              break;\r\n            default:\r\n              accu[keySecondLvl] = {\r\n                key: keySecondLvl,\r\n                value: formatNumber(data[currentKey][keySecondLvl]),\r\n              };\r\n              break;\r\n          }\r\n\r\n          return accu;\r\n        }, accu);\r\n\r\n        break;\r\n    }\r\n    return accu;\r\n  }, {});\r\n\r\n  return newData as KPIData;\r\n};\r\n\r\nconst transformToTimelineData = (data: covidData): timelineDataPoint[] => {\r\n  return data.timeline\r\n    .map((item) => {\r\n      item['dateNumber'] = Date.parse(item.updated_at);\r\n      return item;\r\n    })\r\n    .reverse();\r\n};\r\n\r\nconst transformToPieData = (data: covidData): PieData => {\r\n  const slices = Object.entries(data.latest_data)\r\n    .reduce((accu, current) => {\r\n      if (typeof current[1] === 'number' && current[0] !== 'confirmed') {\r\n        accu.push({\r\n          name: current[0],\r\n          value: current[1],\r\n        });\r\n      }\r\n      return accu;\r\n    }, [])\r\n    .filter((item) => item);\r\n\r\n  const total =\r\n    typeof data.latest_data.confirmed === 'number'\r\n      ? data.latest_data.confirmed\r\n      : 0;\r\n\r\n  return {\r\n    slices,\r\n    total,\r\n  };\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { graphDataReducer, GraphState } from './graphData';\r\n\r\nexport interface StoreState {\r\n  graphData: GraphState;\r\n}\r\n\r\nconst reducers = combineReducers<StoreState>({\r\n  graphData: graphDataReducer,\r\n});\r\n\r\nexport default reducers;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport { fetchCovidData } from './actions/graphData';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\n// Workaround, need to figure out what the issue is with the types\r\nstore.dispatch<any>(fetchCovidData('US'));\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"TopSection_search__33u_E\",\"inputContainer\":\"TopSection_inputContainer__1Nrg1\",\"select\":\"TopSection_select__1Pp2L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BottomSection\":\"BottomSection_BottomSection__1vdh6\",\"svg\":\"BottomSection_svg__1IKIL\",\"animatedMiddle\":\"BottomSection_animatedMiddle__1dGfo\",\"toMiddle\":\"BottomSection_toMiddle__9E-9h\",\"animatedLeft\":\"BottomSection_animatedLeft__Y0IQv\",\"fromRight\":\"BottomSection_fromRight__1RocY\",\"animatedRight\":\"BottomSection_animatedRight__20YJn\",\"fromLeft\":\"BottomSection_fromLeft__10QlZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__gwcxd\",\"container\":\"Layout_container__2HtMz\",\"block1\":\"Layout_block1__27XyA\",\"block2\":\"Layout_block2__1iDU5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"BackgroundTop_svg__2Deqp\",\"animatedMiddle\":\"BackgroundTop_animatedMiddle__3DtyK\",\"toMiddle\":\"BackgroundTop_toMiddle__2Wk2h\",\"animatedLeft\":\"BackgroundTop_animatedLeft__MRkDx\",\"fromRight\":\"BackgroundTop_fromRight__1vb4Y\",\"animatedRight\":\"BackgroundTop_animatedRight__CAfcw\",\"fromLeft\":\"BackgroundTop_fromLeft__3Ngem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"CustomPieChart_background__3PQJw\",\"customTooltip\":\"CustomPieChart_customTooltip__mOORe\",\"label\":\"CustomPieChart_label__1Z2V5\"};"],"sourceRoot":""}